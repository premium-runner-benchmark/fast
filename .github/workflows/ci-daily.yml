name: CI - FAST

on:
  push: 
  workflow_dispatch:

jobs:
  test:
    continue-on-error: true
    runs-on: ${{ matrix.runner_type }}
    strategy:
      matrix:
        runner_type: [ds2v2e,d2asv4e,ds2v2,ds2v3,d2dsv4,d2asv4,d4asv4,ds3v2,ds4v2,ds5v2,f2s,f4s,f8s,f16s,f32s,f64s,ubuntu-latest,n2s2,c2s4,m5large,c5xlarge]
    env:
      runId: ${{ matrix.runner_type }}-${{ github.workflow }}
      artifactsDir: artifacts/${{ github.repository }}
      iostatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-iostat.txt
      vmstatFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-vmstat.txt
      timingFile: artifacts/${{ github.repository }}/${{ matrix.runner_type }}-timing.txt
    
    steps:
      # Start collecting stats
      - run: sudo apt-get install build-essential -y
      #- run: sudo apt -y install sysstat
      - run: mkdir -p ${{ runner.temp }}/${{ env.artifactsDir }}
      - run: iostat -yxmt 1 > ${{ runner.temp }}/${{ env.iostatFile }} &
      - run: vmstat -n 1 > ${{ runner.temp }}/${{ env.vmstatFile }} &
      - run: date -R > ${{ runner.temp }}/${{ env.timingFile }}

      - run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.0/install.sh | bash
          source ~/.nvm/nvm.sh
          nvm install 10.0
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt update && sudo apt install --no-install-recommends yarn
          npm install --g lerna
          
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      
      - uses: actions/checkout@v2

      - name: Install package dependencies / prepare workspaces
        run: yarn install --frozen-lockfile

      - name: Testing Prettier format
        run: yarn lerna run prettier:diff

      - name: Testing unit tests
        run: yarn lerna run test --stream

      - name: Collect and upload code coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.6.0
        env: 
          CC_TEST_REPORTER_ID: 08a773cb4ea5811add5a45e12873e5cd2634c005568705cc37abfd5217617a32
        with:
          coverageCommand: yarn lerna run coverage
          coverageLocations: |
            ${{github.workspace}}/packages/tooling/fast-tooling/coverage/lcov.info:lcov
            ${{github.workspace}}/packages/tooling/fast-tooling-react/coverage/lcov.info:lcov
            ${{github.workspace}}/packages/utilities/fast-animation/coverage/lcov.info:lcov
            ${{github.workspace}}/packages/utilities/fast-colors/coverage/lcov.info:lcov
            ${{github.workspace}}/packages/utilities/fast-web-utilities/coverage/lcov.info:lcov
            ${{github.workspace}}/sites/fast-component-explorer/coverage/lcov.info:lcov
          debug: false

        # Collect/upload stats
      - run: date -R >> ${{ runner.temp }}/${{ env.timingFile }}
      - run: pkill iostat && pkill vmstat
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: perfdata
          path: ${{ runner.temp }}/${{ env.artifactsDir }}
          if-no-files-found: error

  process:
    name: Process Perf Data
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
          architecture: x64
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/runnerperf
          path: runnerperf
      - uses: actions/checkout@v2
        with:
          repository: pjquirk/iostat-tool
          path: runnerperf/iostat-tool
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2  
        with:
          name: perfdata
          path: runnerperf/data
      - name: Prereqs
        run: sudo apt -y install datamash  
      - name: Process stats
        run: |
          cd runnerperf
          (cd iostat-tool && python setup.py develop)
          ls -l data
          script/dumpcsv.sh data output
          script/aggregate.sh output ${{ github.repository }}
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: summary-perfdata
          path: runnerperf/output/summary.csv
          if-no-files-found: error
